name: Vulncheck

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.x

    - name: Install Trivy
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        export PATH=$PATH:$(go env GOPATH)/bin
        GOVULNCHECK_OUTPUT=$(govulncheck -C . ./...) || true
        echo "$GOVULNCHECK_OUTPUT" >> output.txt
        echo "GOVULNCHECK=$GOVULNCHECK" >> $GITHUB_ENV
      shell: bash

    - name: Create output.txt file
      id: create_output
      run: |
        echo "::set-output name=output_content::$(cat output.txt)"
        echo "Rak is here ----"
        cat output.txt
        pwd

    - name: Install jq
      run: |
        sudo apt-get update
        sudo apt-get install jq

    - name: Comment on PR with vulncheck results
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const fileContent = fs.readFileSync('output.txt', 'utf8');

          github.rest.issues.createComment({
          issue_number: context.issue.number,
          owner: context.repo.owner,
          repo: context.repo.repo,
          body: `Vulnerability check results:\n${fileContent}`})
